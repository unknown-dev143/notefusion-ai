version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notefusion-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    environment:
      - ENV=development
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://notefusion:notefusion123@db:5432/notefusion
      - REDIS_URL=redis://:${REDIS_PASSWORD:-your-redis-password}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-here}
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - UPLOAD_FOLDER=/app/uploads
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000
      - FRONTEND_URL=http://localhost:3000
      - EMAILS_ENABLED=false
      - SMTP_TLS=false
      - SMTP_PORT=1025
      - SMTP_HOST=mailhog
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/v1/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
      args:
        - NODE_ENV=development
    container_name: notefusion-frontend
    ports:
      - "3000:3000"
      - "24678:24678"  # For Vite HMR
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000/api/v1
      - VITE_WS_URL=ws://localhost:8000/ws
      - VITE_ENABLE_DEV_TOOLS=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - app-network
      - frontend-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Service
  db:
    image: postgres:13-alpine
    container_name: notefusion-db
    environment:
      - POSTGRES_USER=notefusion
      - POSTGRES_PASSWORD=notefusion123
      - POSTGRES_DB=notefusion
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U notefusion -d notefusion"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: notefusion-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-your-redis-password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - app-network
    restart: unless-stopped

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@notefusion.ai}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin123}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
