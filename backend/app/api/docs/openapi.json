{
  "openapi": "3.0.3",
  "info": {
    "title": "NoteFusion AI API",
    "description": "API for NoteFusion AI application with API key authentication and rate limiting",
    "version": "1.0.0",
    "contact": {
      "email": "support@notefusion.ai"
    },
    "license": {
      "name": "Proprietary"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1",
      "description": "Local development server"
    },
    {
      "url": "https://api.notefusion.ai/api/v1",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Authentication endpoints"
    },
    {
      "name": "api-keys",
      "description": "API key management"
    },
    {
      "name": "notes",
      "description": "Notes management"
    }
  ],
  "paths": {
    "/auth/login/access-token": {
      "post": {
        "tags": ["authentication"],
        "summary": "Login to get access token",
        "operationId": "login_access_token",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securepassword"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string",
                      "example": "bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api-keys/": {
      "get": {
        "tags": ["api-keys"],
        "summary": "List API keys",
        "description": "List all API keys for the authenticated user",
        "security": [{"OAuth2PasswordBearer": []}],
        "responses": {
          "200": {
            "description": "List of API keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyListResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"}
        }
      },
      "post": {
        "tags": ["api-keys"],
        "summary": "Create API key",
        "description": "Create a new API key",
        "security": [{"OAuth2PasswordBearer": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "API key created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"}
        }
      }
    },
    "/api-keys/{key_id}": {
      "get": {
        "tags": ["api-keys"],
        "summary": "Get API key",
        "description": "Get details of a specific API key",
        "security": [{"OAuth2PasswordBearer": []}],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      },
      "patch": {
        "tags": ["api-keys"],
        "summary": "Update API key",
        "description": "Update an existing API key",
        "security": [{"OAuth2PasswordBearer": []}],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIKeyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyResponse"
                }
              }
            }
          },
          "400": {"$ref": "#/components/responses/BadRequest"},
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      },
      "delete": {
        "tags": ["api-keys"],
        "summary": "Delete API key",
        "description": "Delete an API key",
        "security": [{"OAuth2PasswordBearer": []}],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      }
    },
    "/api-keys/{key_id}/usage": {
      "get": {
        "tags": ["api-keys"],
        "summary": "Get API key usage",
        "description": "Get usage statistics for an API key",
        "security": [{"OAuth2PasswordBearer": []}],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date for filtering (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date for filtering (YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key usage statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyUsageResponse"
                }
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      }
    },
    "/api-keys/{key_id}/rate-limit": {
      "get": {
        "tags": ["api-keys"],
        "summary": "Get rate limit info",
        "description": "Get rate limit information for an API key",
        "security": [{"OAuth2PasswordBearer": []}],
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rate limit information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateLimitInfo"
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "integer"
                },
                "description": "Request limit per time window"
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "integer"
                },
                "description": "Remaining requests in the current window"
              },
              "X-RateLimit-Reset": {
                "schema": {
                  "type": "integer"
                },
                "description": "Unix timestamp when the current window resets"
              }
            }
          },
          "401": {"$ref": "#/components/responses/Unauthorized"},
          "403": {"$ref": "#/components/responses/Forbidden"},
          "404": {"$ref": "#/components/responses/NotFound"}
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "/api/v1/auth/login/access-token",
            "scopes": {}
          }
        }
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    },
    "schemas": {
      "APIKeyCreate": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "example": "My API Key"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["notes:read", "notes:write"]
          },
          "rate_limit": {
            "type": "integer",
            "description": "Maximum requests per minute",
            "example": 1000
          },
          "expires_in_days": {
            "type": "integer",
            "description": "Number of days until the key expires",
            "example": 30
          }
        }
      },
      "APIKeyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated API Key Name"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["notes:read"]
          },
          "rate_limit": {
            "type": "integer",
            "example": 2000
          },
          "is_active": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "APIKeyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "key_id": {
            "type": "string",
            "description": "The public part of the API key (first part before the dot)"
          },
          "key": {
            "type": "string",
            "description": "The full API key (only shown once on creation)",
            "format": "password"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rate_limit": {
            "type": "integer"
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "APIKeyListResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/APIKeyResponse"
        }
      },
      "APIKeyUsageResponse": {
        "type": "object",
        "properties": {
          "total_requests": {
            "type": "integer",
            "description": "Total number of requests in the period"
          },
          "successful_requests": {
            "type": "integer"
          },
          "failed_requests": {
            "type": "integer"
          },
          "by_endpoint": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "endpoint": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          },
          "by_status_code": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "time_series": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "count": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "RateLimitInfo": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Maximum number of requests allowed in the time window"
          },
          "remaining": {
            "type": "integer",
            "description": "Number of requests remaining in the current window"
          },
          "reset": {
            "type": "integer",
            "description": "Unix timestamp when the current window resets"
          },
          "retry_after": {
            "type": "integer",
            "nullable": true,
            "description": "Seconds until the rate limit resets (only present when rate limited)"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "data": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Error message"
          },
          "code": {
            "type": "string",
            "example": "error_code"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "headers": {
          "WWW-Authenticate": {
            "schema": {
              "type": "string"
            },
            "description": "Authentication scheme"
          }
        }
      },
      "Forbidden": {
        "description": "Insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Rate limit exceeded",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        },
        "headers": {
          "Retry-After": {
            "schema": {
              "type": "integer"
            },
            "description": "Seconds until the rate limit resets"
          },
          "X-RateLimit-Limit": {
            "schema": {
              "type": "integer"
            },
            "description": "Request limit per time window"
          },
          "X-RateLimit-Remaining": {
            "schema": {
              "type": "integer"
            },
            "description": "Remaining requests in the current window"
          },
          "X-RateLimit-Reset": {
            "schema": {
              "type": "integer"
            },
            "description": "Unix timestamp when the current window resets"
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2PasswordBearer": []
    }
  ]
}
