"""Add Task model

Revision ID: 1234567890ab
Revises: head
Create Date: 2025-08-08 17:45:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1234567890ab'
down_revision = 'head'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False, comment='Primary key'),
        sa.Column('task_id', sa.String(length=255), nullable=False, comment='Unique task identifier'),
        sa.Column('user_id', sa.String(length=255), nullable=False, comment='ID of the user who initiated the task'),
        sa.Column('task_type', sa.Enum('video_generation', 'audio_processing', 'document_processing', 'ai_training', name='tasktype'), nullable=False, comment='Type of the task'),
        sa.Column('status', sa.Enum('pending', 'processing', 'completed', 'failed', 'cancelled', name='taskstatus'), nullable=False, comment='Current status of the task'),
        sa.Column('input_data', sa.JSON(), nullable=True, comment='Input data for the task'),
        sa.Column('result_data', sa.JSON(), nullable=True, comment='Output/result data from the task'),
        sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if the task failed'),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='When the task was created'),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='When the task was last updated'),
        sa.Column('completed_at', sa.DateTime(), nullable=True, comment='When the task was completed (or failed)'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('task_id'),
        comment='Tracks asynchronous tasks in the system'
    )
    
    # Create indexes
    op.create_index('idx_tasks_user_id', 'tasks', ['user_id'], unique=False)
    op.create_index('idx_tasks_status', 'tasks', ['status'], unique=False)
    op.create_index('idx_tasks_created_at', 'tasks', ['created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_tasks_created_at', table_name='tasks')
    op.drop_index('idx_tasks_status', table_name='tasks')
    op.drop_index('idx_tasks_user_id', table_name='tasks')
    op.drop_table('tasks')
    
    # Drop the enum types
    sa.Enum(name='taskstatus').drop(op.get_bind(), checkfirst=False)
    sa.Enum(name='tasktype').drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
