"""Test script for video generation service."""
import os
import sys
from pathlib import Path
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

# Add the project root to the path
project_root = str(Path(__file__).parents[2])
if project_root not in sys.path:
    sys.path.append(project_root)

from app.db.base import Base
from app.services.video.service import VideoGenerationService
from app.schemas.video import VideoGenerationRequest, VideoStyle, VideoVoice

# Database setup
TEST_DB_URL = "sqlite:///./test_video.db"
engine = create_engine(TEST_DB_URL, connect_args={"check_same_thread": False})
TestingSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Create test database
def init_test_db():
    Base.metadata.create_all(bind=engine)
    return TestingSessionLocal()

def test_video_generation():
    """Test video generation workflow."""
    # Initialize test database
    db = init_test_db()
    
    # Create test request
    test_script = """# Welcome to NoteFusion AI
    
    This is a test video generated by NoteFusion AI.
    
    You can create beautiful videos from your notes automatically.
    
    Just write your content and let us handle the rest!"""
    
    request = VideoGenerationRequest(
        script=test_script,
        style=VideoStyle.PROFESSIONAL,
        voice=VideoVoice.NEUTRAL,
        include_narration=False,
        duration_per_slide=3
    )
    
    # Initialize service
    service = VideoGenerationService(db)
    
    # Start video generation
    print("Starting video generation...")
    result = service.generate_video(
        request=request,
        user_id="test_user_123"
    )
    
    print(f"Task created: {result}")
    print("Video generation started in the background.")
    print("Check the 'generated_videos' directory for the output.")

if __name__ == "__main__":
    test_video_generation()
