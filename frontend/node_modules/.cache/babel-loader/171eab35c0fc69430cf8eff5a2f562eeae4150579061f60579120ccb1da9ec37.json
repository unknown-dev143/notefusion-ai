{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\notefusion-ai\\\\notefusion-ai\\\\frontend\\\\src\\\\components\\\\PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element,\n  children\n}) => {\n  _s();\n  const {\n    currentUser,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Ensure we return a valid React element\n  if (element) {\n    return element;\n  }\n  if (children) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false);\n  }\n  return null;\n};\n_s(PrivateRoute, \"ms8kp1TUhSF0K2wfKujBpthRN4o=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateRoute","element","children","_s","currentUser","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/User/notefusion-ai/notefusion-ai/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface PrivateRouteProps {\n  element?: React.ReactElement;\n  children?: ReactNode;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ element, children }) => {\n  const { currentUser, loading } = useAuth();\n  const location = useLocation();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!currentUser) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Ensure we return a valid React element\n  if (element) {\n    return element;\n  }\n  \n  if (children) {\n    return <>{children}</>;\n  }\n  \n  return null;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOlD,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EAC1C,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAIW,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAK,QAAA,EAAK;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACN,WAAW,EAAE;IAChB,oBAAOP,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP;MAAS,CAAE;MAACQ,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIT,OAAO,EAAE;IACX,OAAOA,OAAO;EAChB;EAEA,IAAIC,QAAQ,EAAE;IACZ,oBAAOL,OAAA,CAAAE,SAAA;MAAAG,QAAA,EAAGA;IAAQ,gBAAG,CAAC;EACxB;EAEA,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAtBIH,YAAyC;EAAA,QACZL,OAAO,EACvBD,WAAW;AAAA;AAAAqB,EAAA,GAFxBf,YAAyC;AAwB/C,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}