{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\notefusion-ai\\\\notefusion-ai\\\\frontend\\\\src\\\\components\\\\LectureNotesManager.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { lectureService } from '../services/lectureService';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LectureNotesManager = ({\n  onNewNote,\n  currentVideoTitle\n}) => {\n  _s();\n  const [currentLecture, setCurrentLecture] = useState(null);\n  const [lectureHistory, setLectureHistory] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Set up event listeners\n  useEffect(() => {\n    // Handle new lecture detection\n    lectureService.onNewLecture = lecture => {\n      setCurrentLecture(lecture);\n      toast.success(`New lecture detected: ${lecture.title}`, {\n        position: 'bottom-right'\n      });\n    };\n\n    // Handle lecture completion\n    lectureService.onLectureComplete = lecture => {\n      setLectureHistory(prev => [lecture, ...prev]);\n      toast.success(`Lecture marked as complete: ${lecture.title}`, {\n        position: 'bottom-right'\n      });\n    };\n    return () => {\n      // Cleanup\n      lectureService.onNewLecture = null;\n      lectureService.onLectureComplete = null;\n    };\n  }, []);\n\n  // Process new note content\n  const processNote = useCallback(content => {\n    if (!content.trim()) return;\n    setIsProcessing(true);\n    try {\n      const lecture = lectureService.processNewContent(content, currentVideoTitle);\n      if (lecture && onNewNote) {\n        onNewNote(lecture.content);\n      }\n    } catch (error) {\n      console.error('Error processing note:', error);\n      toast.error('Failed to process note');\n    } finally {\n      setIsProcessing(false);\n    }\n  }, [currentVideoTitle, onNewNote]);\n\n  // Handle manual lecture completion\n  const handleCompleteLecture = useCallback(() => {\n    if (currentLecture) {\n      lectureService.markCurrentLectureComplete();\n      setCurrentLecture(null);\n    }\n  }, [currentLecture]);\n\n  // Merge lectures\n  const mergeLectures = useCallback(lectureIds => {\n    // In a real app, this would merge the lectures in your database\n    // For now, we'll just update the local state\n    setLectureHistory(prev => {\n      const toMerge = prev.filter(l => lectureIds.includes(l.id));\n      if (toMerge.length < 2) return prev;\n      const merged = {\n        id: `merged-${Date.now()}`,\n        title: `Merged Lecture (${toMerge.length} parts)`,\n        content: toMerge.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime()).map(l => `--- ${l.title} ---\\n${l.content}`).join('\\n\\n'),\n        timestamp: new Date(),\n        isComplete: true\n      };\n      return [merged, ...prev.filter(l => !lectureIds.includes(l.id))];\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [currentLecture && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 p-4 rounded-lg mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-bold text-lg\",\n          children: [\"Current Lecture: \", currentLecture.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCompleteLecture,\n          className: \"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",\n          disabled: isProcessing,\n          children: isProcessing ? 'Processing...' : 'Complete Lecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-40 overflow-y-auto p-2 bg-white rounded border\",\n        children: currentLecture.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), lectureHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-bold text-lg mb-2\",\n        children: \"Previous Lectures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: lectureHistory.map(lecture => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border rounded hover:bg-gray-50 cursor-pointer\",\n          onClick: () => {\n            // In a real app, this would open the lecture for editing/viewing\n            toast.success(`Opening lecture: ${lecture.title}`);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: lecture.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500\",\n              children: lecture.timestamp.toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 line-clamp-2 mt-1\",\n            children: [lecture.content.substring(0, 200), lecture.content.length > 200 ? '...' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, lecture.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(LectureNotesManager, \"ED+9FeBRIUhpxPxUO7YqVs899No=\");\n_c = LectureNotesManager;\nvar _c;\n$RefreshReg$(_c, \"LectureNotesManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","lectureService","toast","jsxDEV","_jsxDEV","LectureNotesManager","onNewNote","currentVideoTitle","_s","currentLecture","setCurrentLecture","lectureHistory","setLectureHistory","isProcessing","setIsProcessing","onNewLecture","lecture","success","title","position","onLectureComplete","prev","processNote","content","trim","processNewContent","error","console","handleCompleteLecture","markCurrentLectureComplete","mergeLectures","lectureIds","toMerge","filter","l","includes","id","length","merged","Date","now","sort","a","b","timestamp","getTime","map","join","isComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toLocaleDateString","substring","_c","$RefreshReg$"],"sources":["C:/Users/User/notefusion-ai/notefusion-ai/frontend/src/components/LectureNotesManager.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { lectureService, LectureNote } from '../services/lectureService';\nimport { toast } from 'react-hot-toast';\n\ninterface LectureNotesManagerProps {\n  onNewNote?: (note: string) => void;\n  currentVideoTitle?: string;\n}\n\nexport const LectureNotesManager: React.FC<LectureNotesManagerProps> = ({\n  onNewNote,\n  currentVideoTitle,\n}) => {\n  const [currentLecture, setCurrentLecture] = useState<LectureNote | null>(null);\n  const [lectureHistory, setLectureHistory] = useState<LectureNote[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Set up event listeners\n  useEffect(() => {\n    // Handle new lecture detection\n    lectureService.onNewLecture = (lecture) => {\n      setCurrentLecture(lecture);\n      toast.success(`New lecture detected: ${lecture.title}`, {\n        position: 'bottom-right',\n      });\n    };\n\n    // Handle lecture completion\n    lectureService.onLectureComplete = (lecture) => {\n      setLectureHistory((prev) => [lecture, ...prev]);\n      toast.success(`Lecture marked as complete: ${lecture.title}`, {\n        position: 'bottom-right',\n      });\n    };\n\n    return () => {\n      // Cleanup\n      lectureService.onNewLecture = null;\n      lectureService.onLectureComplete = null;\n    };\n  }, []);\n\n  // Process new note content\n  const processNote = useCallback(\n    (content: string) => {\n      if (!content.trim()) return;\n\n      setIsProcessing(true);\n      try {\n        const lecture = lectureService.processNewContent(\n          content,\n          currentVideoTitle\n        );\n        \n        if (lecture && onNewNote) {\n          onNewNote(lecture.content);\n        }\n      } catch (error) {\n        console.error('Error processing note:', error);\n        toast.error('Failed to process note');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [currentVideoTitle, onNewNote]\n  );\n\n  // Handle manual lecture completion\n  const handleCompleteLecture = useCallback(() => {\n    if (currentLecture) {\n      lectureService.markCurrentLectureComplete();\n      setCurrentLecture(null);\n    }\n  }, [currentLecture]);\n\n  // Merge lectures\n  const mergeLectures = useCallback((lectureIds: string[]) => {\n    // In a real app, this would merge the lectures in your database\n    // For now, we'll just update the local state\n    setLectureHistory((prev) => {\n      const toMerge = prev.filter((l) => lectureIds.includes(l.id));\n      if (toMerge.length < 2) return prev;\n\n      const merged: LectureNote = {\n        id: `merged-${Date.now()}`,\n        title: `Merged Lecture (${toMerge.length} parts)`,\n        content: toMerge\n          .sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime())\n          .map((l) => `--- ${l.title} ---\\n${l.content}`)\n          .join('\\n\\n'),\n        timestamp: new Date(),\n        isComplete: true,\n      };\n\n      return [merged, ...prev.filter((l) => !lectureIds.includes(l.id))];\n    });\n  }, []);\n\n  return (\n    <div className=\"space-y-4\">\n      {currentLecture && (\n        <div className=\"bg-blue-50 p-4 rounded-lg mb-4\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h3 className=\"font-bold text-lg\">\n              Current Lecture: {currentLecture.title}\n            </h3>\n            <button\n              onClick={handleCompleteLecture}\n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              disabled={isProcessing}\n            >\n              {isProcessing ? 'Processing...' : 'Complete Lecture'}\n            </button>\n          </div>\n          <div className=\"max-h-40 overflow-y-auto p-2 bg-white rounded border\">\n            {currentLecture.content}\n          </div>\n        </div>\n      )}\n\n      {lectureHistory.length > 0 && (\n        <div>\n          <h3 className=\"font-bold text-lg mb-2\">Previous Lectures</h3>\n          <div className=\"space-y-2\">\n            {lectureHistory.map((lecture) => (\n              <div\n                key={lecture.id}\n                className=\"p-3 border rounded hover:bg-gray-50 cursor-pointer\"\n                onClick={() => {\n                  // In a real app, this would open the lecture for editing/viewing\n                  toast.success(`Opening lecture: ${lecture.title}`);\n                }}\n              >\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium\">{lecture.title}</span>\n                  <span className=\"text-sm text-gray-500\">\n                    {lecture.timestamp.toLocaleDateString()}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 line-clamp-2 mt-1\">\n                  {lecture.content.substring(0, 200)}\n                  {lecture.content.length > 200 ? '...' : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}