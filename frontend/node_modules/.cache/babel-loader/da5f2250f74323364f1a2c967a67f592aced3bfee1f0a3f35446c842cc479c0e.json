{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\notefusion-ai\\\\notefusion-ai\\\\frontend\\\\src\\\\components\\\\AISettings.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { Button, Card, Alert, Spin, Typography, Switch, Space, Tooltip, Modal, message, Select } from 'antd';\nimport { SettingOutlined, SaveOutlined, SyncOutlined, ExclamationCircleOutlined, ArrowUpOutlined, InfoCircleOutlined } from '@ant-design/icons';\nimport { toast } from 'react-hot-toast';\nimport { api, handleApiError } from '../lib/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Text\n} = Typography;\nconst AISettings = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useAuth();\n\n  // State for form fields\n  const [selectedModel, setSelectedModel] = useState(null);\n  const [autoUpgrade, setAutoUpgrade] = useState(false);\n  const [isUpdateModalVisible, setIsUpdateModalVisible] = useState(false);\n  const [isCheckingForUpdates, setIsCheckingForUpdates] = useState(false);\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  const [recommendedUpgrade, setRecommendedUpgrade] = useState(null);\n\n  // Fetch AI configuration\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useQuery(['aiSettings'], async () => {\n    const response = await api.get('/ai/settings');\n    return response.data;\n  }, {\n    onSuccess: data => {\n      var _data$settings;\n      if ((_data$settings = data.settings) !== null && _data$settings !== void 0 && _data$settings.ai_model) {\n        setSelectedModel(data.settings.model_id);\n        setAutoUpgrade(data.settings.is_auto_upgrade);\n      }\n      setUpdateAvailable(data.update_available);\n      setRecommendedUpgrade(data.recommended_upgrade || null);\n    },\n    onError: error => {\n      handleApiError(error, 'Failed to load AI settings');\n    },\n    enabled: !!currentUser,\n    retry: 1,\n    refetchOnWindowFocus: false\n  });\n\n  // Update configuration mutation\n  const updateConfig = useMutation(async values => {\n    const response = await api.patch('/ai/settings', values);\n    return response.data;\n  }, {\n    onSuccess: data => {\n      queryClient.invalidateQueries(['aiSettings']);\n      message.success('Settings updated successfully');\n    },\n    onError: error => {\n      handleApiError(error, 'Failed to update settings');\n    }\n  });\n\n  // Check for model updates\n  const checkForUpdates = useCallback(async () => {\n    try {\n      setIsCheckingForUpdates(true);\n      const response = await api.post('/ai/models/check-updates');\n      if (response.status === 202) {\n        // Wait a moment for the update to process\n        setTimeout(() => {\n          refetch();\n          toast.success('Successfully checked for updates');\n          setIsCheckingForUpdates(false);\n        }, 1500);\n      }\n    } catch (error) {\n      handleApiError(error, 'Failed to check for updates');\n      setIsCheckingForUpdates(false);\n    }\n  }, [refetch]);\n\n  // Handle upgrade to recommended model\n  const handleUpgrade = useCallback(() => {\n    if (!recommendedUpgrade) return;\n    updateConfig.mutate({\n      model_id: recommendedUpgrade.id,\n      is_auto_upgrade: true\n    });\n    setUpdateAvailable(false);\n    setIsUpdateModalVisible(false);\n  }, [recommendedUpgrade, updateConfig]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(() => {\n    if (selectedModel === null) {\n      message.error('Please select a model');\n      return;\n    }\n    updateConfig.mutate({\n      model_id: selectedModel,\n      is_auto_upgrade: autoUpgrade\n    });\n  }, [selectedModel, autoUpgrade, updateConfig]);\n\n  // Show loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI Model Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this),\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center py-8\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI Model Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this),\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Error loading settings\",\n        description: handleApiError(error, 'Failed to load AI settings. Please try again later.'),\n        type: \"error\",\n        showIcon: true,\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          danger: true,\n          onClick: () => refetch(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n  const availableModels = (data === null || data === void 0 ? void 0 : data.models) || [];\n  const currentSettings = data === null || data === void 0 ? void 0 : data.settings;\n  const currentModel = availableModels.find(m => m.id === selectedModel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(SettingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AI Model Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), updateAvailable && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Update available\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            icon: /*#__PURE__*/_jsxDEV(ArrowUpOutlined, {\n              style: {\n                color: '#52c41a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this),\n            onClick: () => setIsUpdateModalVisible(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this),\n      className: \"shadow-lg\",\n      extra: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(SyncOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this),\n          onClick: checkForUpdates,\n          loading: isCheckingForUpdates,\n          disabled: updateConfig.isLoading,\n          children: \"Check for Updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(SaveOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this),\n          onClick: handleSubmit,\n          loading: updateConfig.isLoading,\n          disabled: !selectedModel || updateConfig.isLoading,\n          children: \"Save Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium mb-2\",\n            children: \"AI Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: \"w-full\",\n            value: selectedModel,\n            onChange: setSelectedModel,\n            loading: isLoading,\n            disabled: isLoading || updateConfig.isLoading,\n            placeholder: \"Select an AI model\",\n            optionLabelProp: \"label\",\n            notFoundContent: isLoading ? 'Loading models...' : 'No models available',\n            children: availableModels.map(model => /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: model.id,\n              disabled: !model.is_available,\n              label: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [model.name, \" \", !model.is_available && '(Unavailable)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-medium\",\n                  children: [model.name, model.status === 'beta' && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded\",\n                    children: \"Beta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this), !model.is_available && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-xs bg-gray-100 text-gray-600 px-2 py-0.5 rounded\",\n                    children: \"Unavailable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500\",\n                  children: model.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-400 mt-1\",\n                  children: [model.provider, \" \\u2022 \", model.max_tokens ? `Max tokens: ${model.max_tokens.toLocaleString()}` : 'Token limit not specified']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this)\n            }, model.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), currentModel && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n              className: \"mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), currentModel.description, currentModel.max_tokens && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"(max \", currentModel.max_tokens.toLocaleString(), \" tokens)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-4 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-medium mb-1\",\n                children: \"Automatic Updates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                type: \"secondary\",\n                className: \"text-sm\",\n                children: \"Automatically upgrade to newer model versions when available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              checked: autoUpgrade,\n              onChange: setAutoUpgrade,\n              loading: updateConfig.isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), (currentSettings === null || currentSettings === void 0 ? void 0 : currentSettings.last_upgraded_at) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm text-gray-500\",\n            children: [\"Last upgraded: \", new Date(currentSettings.last_upgraded_at).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(ArrowUpOutlined, {\n          style: {\n            color: '#52c41a'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Update Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this),\n      open: isUpdateModalVisible,\n      onOk: handleUpgrade,\n      onCancel: () => setIsUpdateModalVisible(false),\n      okText: \"Upgrade Now\",\n      cancelText: \"Later\",\n      okButtonProps: {\n        type: 'primary',\n        danger: false\n      },\n      width: 600,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A new version of your selected AI model is available. Would you like to upgrade now?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), recommendedUpgrade && currentModel && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: \"Current Model\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: currentModel.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: \"Recommended Upgrade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-green-600 font-medium\",\n              children: [recommendedUpgrade.name, recommendedUpgrade.status === 'beta' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded\",\n                children: \"Beta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-sm text-gray-600\",\n            children: recommendedUpgrade.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start\",\n          children: [/*#__PURE__*/_jsxDEV(ExclamationCircleOutlined, {\n            className: \"text-yellow-500 mr-2 mt-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            type: \"secondary\",\n            className: \"text-sm\",\n            children: \"Note: Upgrading to a new model may affect the behavior of your AI interactions. You can always switch back to a previous model if needed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(AISettings, \"C1VYzpyg819AZVPyl6L6LgmcUbQ=\", false, function () {\n  return [useQueryClient, useAuth, useQuery, useMutation];\n});\n_c = AISettings;\nexport default AISettings;\nvar _c;\n$RefreshReg$(_c, \"AISettings\");","map":{"version":3,"names":["React","useState","useCallback","useQuery","useMutation","useQueryClient","Button","Card","Alert","Spin","Typography","Switch","Space","Tooltip","Modal","message","Select","SettingOutlined","SaveOutlined","SyncOutlined","ExclamationCircleOutlined","ArrowUpOutlined","InfoCircleOutlined","toast","api","handleApiError","useAuth","jsxDEV","_jsxDEV","Text","AISettings","_s","queryClient","currentUser","selectedModel","setSelectedModel","autoUpgrade","setAutoUpgrade","isUpdateModalVisible","setIsUpdateModalVisible","isCheckingForUpdates","setIsCheckingForUpdates","updateAvailable","setUpdateAvailable","recommendedUpgrade","setRecommendedUpgrade","data","isLoading","error","refetch","response","get","onSuccess","_data$settings","settings","ai_model","model_id","is_auto_upgrade","update_available","recommended_upgrade","onError","enabled","retry","refetchOnWindowFocus","updateConfig","values","patch","invalidateQueries","success","checkForUpdates","post","status","setTimeout","handleUpgrade","mutate","id","handleSubmit","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","size","description","type","showIcon","action","danger","onClick","availableModels","models","currentSettings","currentModel","find","m","icon","style","color","extra","loading","disabled","value","onChange","placeholder","optionLabelProp","notFoundContent","map","model","Option","is_available","label","name","provider","max_tokens","toLocaleString","checked","last_upgraded_at","Date","open","onOk","onCancel","okText","cancelText","okButtonProps","width","_c","$RefreshReg$"],"sources":["C:/Users/User/notefusion-ai/notefusion-ai/frontend/src/components/AISettings.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { \n  Button, \n  Card, \n  Alert, \n  Spin, \n  Typography, \n  Switch, \n  Space, \n  Tooltip,\n  Modal,\n  message,\n  Select\n} from 'antd';\nimport { \n  SettingOutlined, \n  SaveOutlined, \n  SyncOutlined, \n  ExclamationCircleOutlined,\n  ArrowUpOutlined,\n  InfoCircleOutlined\n} from '@ant-design/icons';\nimport { toast } from 'react-hot-toast';\nimport { api, handleApiError } from '../lib/api';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst { Text } = Typography;\n\ninterface AIModel {\n  id: number;\n  name: string;\n  model_id: string;\n  provider: string;\n  is_available: boolean;\n  status: 'active' | 'beta' | 'alpha' | 'deprecated';\n  max_tokens?: number;\n  description?: string;\n}\n\ninterface UserAIModelSettings {\n  id: number;\n  user_id: number;\n  model_id: number;\n  is_auto_upgrade: boolean;\n  last_upgraded_at?: string;\n  ai_model: AIModel;\n}\n\ninterface AIConfigResponse {\n  models: AIModel[];\n  settings: UserAIModelSettings;\n  update_available: boolean;\n  recommended_upgrade?: AIModel;\n  last_checked: string;\n}\n\nconst AISettings: React.FC = () => {\n  const queryClient = useQueryClient();\n  const { currentUser } = useAuth();\n  \n  // State for form fields\n  const [selectedModel, setSelectedModel] = useState<number | null>(null);\n  const [autoUpgrade, setAutoUpgrade] = useState(false);\n  const [isUpdateModalVisible, setIsUpdateModalVisible] = useState(false);\n  const [isCheckingForUpdates, setIsCheckingForUpdates] = useState(false);\n  const [updateAvailable, setUpdateAvailable] = useState(false);\n  const [recommendedUpgrade, setRecommendedUpgrade] = useState<AIModel | null>(null);\n\n  // Fetch AI configuration\n  const { data, isLoading, error, refetch } = useQuery<AIConfigResponse>(\n    ['aiSettings'],\n    async () => {\n      const response = await api.get('/ai/settings');\n      return response.data;\n    },\n    {\n      onSuccess: (data) => {\n        if (data.settings?.ai_model) {\n          setSelectedModel(data.settings.model_id);\n          setAutoUpgrade(data.settings.is_auto_upgrade);\n        }\n        setUpdateAvailable(data.update_available);\n        setRecommendedUpgrade(data.recommended_upgrade || null);\n      },\n      onError: (error) => {\n        handleApiError(error, 'Failed to load AI settings');\n      },\n      enabled: !!currentUser,\n      retry: 1,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  // Update configuration mutation\n  const updateConfig = useMutation(\n    async (values: { model_id?: number; is_auto_upgrade?: boolean }) => {\n      const response = await api.patch('/ai/settings', values);\n      return response.data;\n    },\n    {\n      onSuccess: (data: UserAIModelSettings) => {\n        queryClient.invalidateQueries(['aiSettings']);\n        message.success('Settings updated successfully');\n      },\n      onError: (error) => {\n        handleApiError(error, 'Failed to update settings');\n      },\n    }\n  );\n\n  // Check for model updates\n  const checkForUpdates = useCallback(async () => {\n    try {\n      setIsCheckingForUpdates(true);\n      const response = await api.post('/ai/models/check-updates');\n      \n      if (response.status === 202) {\n        // Wait a moment for the update to process\n        setTimeout(() => {\n          refetch();\n          toast.success('Successfully checked for updates');\n          setIsCheckingForUpdates(false);\n        }, 1500);\n      }\n    } catch (error) {\n      handleApiError(error, 'Failed to check for updates');\n      setIsCheckingForUpdates(false);\n    }\n  }, [refetch]);\n\n  // Handle upgrade to recommended model\n  const handleUpgrade = useCallback(() => {\n    if (!recommendedUpgrade) return;\n    \n    updateConfig.mutate({\n      model_id: recommendedUpgrade.id,\n      is_auto_upgrade: true\n    });\n    \n    setUpdateAvailable(false);\n    setIsUpdateModalVisible(false);\n  }, [recommendedUpgrade, updateConfig]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(() => {\n    if (selectedModel === null) {\n      message.error('Please select a model');\n      return;\n    }\n    \n    updateConfig.mutate({\n      model_id: selectedModel,\n      is_auto_upgrade: autoUpgrade\n    });\n  }, [selectedModel, autoUpgrade, updateConfig]);\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <Card \n        title={\n          <Space>\n            <SettingOutlined />\n            <span>AI Model Settings</span>\n          </Space>\n        } \n        className=\"mb-6\"\n      >\n        <div className=\"flex justify-center py-8\">\n          <Spin size=\"large\" />\n        </div>\n      </Card>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <Card \n        title={\n          <Space>\n            <SettingOutlined />\n            <span>AI Model Settings</span>\n          </Space>\n        } \n        className=\"mb-6\"\n      >\n        <Alert\n          message=\"Error loading settings\"\n          description={handleApiError(error, 'Failed to load AI settings. Please try again later.')}\n          type=\"error\"\n          showIcon\n          action={\n            <Button \n              type=\"primary\" \n              danger \n              onClick={() => refetch()}\n            >\n              Retry\n            </Button>\n          }\n        />\n      </Card>\n    );\n  }\n\n  const availableModels = data?.models || [];\n  const currentSettings = data?.settings;\n  const currentModel = availableModels.find(m => m.id === selectedModel);\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <Card \n        title={\n          <Space>\n            <SettingOutlined />\n            <span>AI Model Settings</span>\n            {updateAvailable && (\n              <Tooltip title=\"Update available\">\n                <Button \n                  type=\"link\" \n                  icon={<ArrowUpOutlined style={{ color: '#52c41a' }} />} \n                  onClick={() => setIsUpdateModalVisible(true)}\n                />\n              </Tooltip>\n            )}\n          </Space>\n        }\n        className=\"shadow-lg\"\n        extra={\n          <Space>\n            <Button \n              icon={<SyncOutlined />} \n              onClick={checkForUpdates}\n              loading={isCheckingForUpdates}\n              disabled={updateConfig.isLoading}\n            >\n              Check for Updates\n            </Button>\n            <Button \n              type=\"primary\" \n              icon={<SaveOutlined />} \n              onClick={handleSubmit}\n              loading={updateConfig.isLoading}\n              disabled={!selectedModel || updateConfig.isLoading}\n            >\n              Save Settings\n            </Button>\n          </Space>\n        }\n      >\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium mb-2\">AI Model</h3>\n            <Select\n              className=\"w-full\"\n              value={selectedModel}\n              onChange={setSelectedModel}\n              loading={isLoading}\n              disabled={isLoading || updateConfig.isLoading}\n              placeholder=\"Select an AI model\"\n              optionLabelProp=\"label\"\n              notFoundContent={isLoading ? 'Loading models...' : 'No models available'}\n            >\n              {availableModels.map((model) => (\n                <Select.Option \n                  key={model.id} \n                  value={model.id}\n                  disabled={!model.is_available}\n                  label={\n                    <span>\n                      {model.name} {!model.is_available && '(Unavailable)'}\n                    </span>\n                  }\n                >\n                  <div>\n                    <div className=\"font-medium\">\n                      {model.name} \n                      {model.status === 'beta' && (\n                        <span className=\"ml-2 text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded\">\n                          Beta\n                        </span>\n                      )}\n                      {!model.is_available && (\n                        <span className=\"ml-2 text-xs bg-gray-100 text-gray-600 px-2 py-0.5 rounded\">\n                          Unavailable\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"text-sm text-gray-500\">\n                      {model.description}\n                    </div>\n                    <div className=\"text-xs text-gray-400 mt-1\">\n                      {model.provider} • {model.max_tokens ? `Max tokens: ${model.max_tokens.toLocaleString()}` : 'Token limit not specified'}\n                    </div>\n                  </div>\n                </Select.Option>\n              ))}\n            </Select>\n            \n            {currentModel && (\n              <div className=\"mt-2 text-sm text-gray-600\">\n                <InfoCircleOutlined className=\"mr-1\" />\n                {currentModel.description} \n                {currentModel.max_tokens && (\n                  <span>(max {currentModel.max_tokens.toLocaleString()} tokens)</span>\n                )}\n              </div>\n            )}\n          </div>\n\n          <div className=\"pt-4 border-t border-gray-200\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h3 className=\"text-lg font-medium mb-1\">Automatic Updates</h3>\n                <Text type=\"secondary\" className=\"text-sm\">\n                  Automatically upgrade to newer model versions when available\n                </Text>\n              </div>\n              <Switch \n                checked={autoUpgrade}\n                onChange={setAutoUpgrade}\n                loading={updateConfig.isLoading}\n              />\n            </div>\n            \n            {currentSettings?.last_upgraded_at && (\n              <div className=\"mt-2 text-sm text-gray-500\">\n                Last upgraded: {new Date(currentSettings.last_upgraded_at).toLocaleString()}\n              </div>\n            )}\n          </div>\n        </div>\n      </Card>\n\n      {/* Update Available Modal */}\n      <Modal\n        title={\n          <Space>\n            <ArrowUpOutlined style={{ color: '#52c41a' }} />\n            <span>Update Available</span>\n          </Space>\n        }\n        open={isUpdateModalVisible}\n        onOk={handleUpgrade}\n        onCancel={() => setIsUpdateModalVisible(false)}\n        okText=\"Upgrade Now\"\n        cancelText=\"Later\"\n        okButtonProps={{ type: 'primary', danger: false }}\n        width={600}\n      >\n        <div className=\"space-y-4\">\n          <p>\n            A new version of your selected AI model is available. Would you like to upgrade now?\n          </p>\n          \n          {recommendedUpgrade && currentModel && (\n            <div className=\"bg-gray-50 p-4 rounded-md\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <div className=\"font-medium\">Current Model</div>\n                <div className=\"text-sm text-gray-500\">{currentModel.name}</div>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <div className=\"font-medium\">Recommended Upgrade</div>\n                <div className=\"text-sm text-green-600 font-medium\">\n                  {recommendedUpgrade.name}\n                  {recommendedUpgrade.status === 'beta' && (\n                    <span className=\"ml-2 text-xs bg-blue-100 text-blue-600 px-2 py-0.5 rounded\">\n                      Beta\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"mt-3 text-sm text-gray-600\">\n                {recommendedUpgrade.description}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"flex items-start\">\n            <ExclamationCircleOutlined className=\"text-yellow-500 mr-2 mt-1\" />\n            <Text type=\"secondary\" className=\"text-sm\">\n              Note: Upgrading to a new model may affect the behavior of your AI interactions.\n              You can always switch back to a previous model if needed.\n            </Text>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default AISettings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}