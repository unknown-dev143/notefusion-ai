{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{lectureService}from'../services/lectureService';import{toast}from'react-hot-toast';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";export const LectureNotesManager=_ref=>{let{onNewNote,currentVideoTitle}=_ref;const[currentLecture,setCurrentLecture]=useState(null);const[lectureHistory,setLectureHistory]=useState([]);const[isProcessing,setIsProcessing]=useState(false);// Set up event listeners\nuseEffect(()=>{// Handle new lecture detection\nlectureService.onNewLecture=lecture=>{setCurrentLecture(lecture);toast.success(`New lecture detected: ${lecture.title}`,{position:'bottom-right'});};// Handle lecture completion\nlectureService.onLectureComplete=lecture=>{setLectureHistory(prev=>[lecture,...prev]);toast.success(`Lecture marked as complete: ${lecture.title}`,{position:'bottom-right'});};return()=>{// Cleanup\nlectureService.onNewLecture=null;lectureService.onLectureComplete=null;};},[]);// Process new note content\nconst processNote=useCallback(content=>{if(!content.trim())return;setIsProcessing(true);try{const lecture=lectureService.processNewContent(content,currentVideoTitle);if(lecture&&onNewNote){onNewNote(lecture.content);}}catch(error){console.error('Error processing note:',error);toast.error('Failed to process note');}finally{setIsProcessing(false);}},[currentVideoTitle,onNewNote]);// Handle manual lecture completion\nconst handleCompleteLecture=useCallback(()=>{if(currentLecture){lectureService.markCurrentLectureComplete();setCurrentLecture(null);}},[currentLecture]);// Merge lectures\nconst mergeLectures=useCallback(lectureIds=>{// In a real app, this would merge the lectures in your database\n// For now, we'll just update the local state\nsetLectureHistory(prev=>{const toMerge=prev.filter(l=>lectureIds.includes(l.id));if(toMerge.length<2)return prev;const merged={id:`merged-${Date.now()}`,title:`Merged Lecture (${toMerge.length} parts)`,content:toMerge.sort((a,b)=>a.timestamp.getTime()-b.timestamp.getTime()).map(l=>`--- ${l.title} ---\\n${l.content}`).join('\\n\\n'),timestamp:new Date(),isComplete:true};return[merged,...prev.filter(l=>!lectureIds.includes(l.id))];});},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[currentLecture&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded-lg mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"font-bold text-lg\",children:[\"Current Lecture: \",currentLecture.title]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCompleteLecture,className:\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\",disabled:isProcessing,children:isProcessing?'Processing...':'Complete Lecture'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"max-h-40 overflow-y-auto p-2 bg-white rounded border\",children:currentLecture.content})]}),lectureHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-lg mb-2\",children:\"Previous Lectures\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:lectureHistory.map(lecture=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 border rounded hover:bg-gray-50 cursor-pointer\",onClick:()=>{// In a real app, this would open the lecture for editing/viewing\ntoast.success(`Opening lecture: ${lecture.title}`);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:lecture.title}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-500\",children:lecture.timestamp.toLocaleDateString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600 line-clamp-2 mt-1\",children:[lecture.content.substring(0,200),lecture.content.length>200?'...':'']})]},lecture.id))})]})]});};","map":{"version":3,"names":["React","useState","useEffect","useCallback","lectureService","toast","jsxs","_jsxs","jsx","_jsx","LectureNotesManager","_ref","onNewNote","currentVideoTitle","currentLecture","setCurrentLecture","lectureHistory","setLectureHistory","isProcessing","setIsProcessing","onNewLecture","lecture","success","title","position","onLectureComplete","prev","processNote","content","trim","processNewContent","error","console","handleCompleteLecture","markCurrentLectureComplete","mergeLectures","lectureIds","toMerge","filter","l","includes","id","length","merged","Date","now","sort","a","b","timestamp","getTime","map","join","isComplete","className","children","onClick","disabled","toLocaleDateString","substring"],"sources":["C:/Users/User/notefusion-ai/notefusion-ai/frontend/src/components/LectureNotesManager.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { lectureService, LectureNote } from '../services/lectureService';\nimport { toast } from 'react-hot-toast';\n\ninterface LectureNotesManagerProps {\n  onNewNote?: (note: string) => void;\n  currentVideoTitle?: string;\n}\n\nexport const LectureNotesManager: React.FC<LectureNotesManagerProps> = ({\n  onNewNote,\n  currentVideoTitle,\n}) => {\n  const [currentLecture, setCurrentLecture] = useState<LectureNote | null>(null);\n  const [lectureHistory, setLectureHistory] = useState<LectureNote[]>([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Set up event listeners\n  useEffect(() => {\n    // Handle new lecture detection\n    lectureService.onNewLecture = (lecture) => {\n      setCurrentLecture(lecture);\n      toast.success(`New lecture detected: ${lecture.title}`, {\n        position: 'bottom-right',\n      });\n    };\n\n    // Handle lecture completion\n    lectureService.onLectureComplete = (lecture) => {\n      setLectureHistory((prev) => [lecture, ...prev]);\n      toast.success(`Lecture marked as complete: ${lecture.title}`, {\n        position: 'bottom-right',\n      });\n    };\n\n    return () => {\n      // Cleanup\n      lectureService.onNewLecture = null;\n      lectureService.onLectureComplete = null;\n    };\n  }, []);\n\n  // Process new note content\n  const processNote = useCallback(\n    (content: string) => {\n      if (!content.trim()) return;\n\n      setIsProcessing(true);\n      try {\n        const lecture = lectureService.processNewContent(\n          content,\n          currentVideoTitle\n        );\n        \n        if (lecture && onNewNote) {\n          onNewNote(lecture.content);\n        }\n      } catch (error) {\n        console.error('Error processing note:', error);\n        toast.error('Failed to process note');\n      } finally {\n        setIsProcessing(false);\n      }\n    },\n    [currentVideoTitle, onNewNote]\n  );\n\n  // Handle manual lecture completion\n  const handleCompleteLecture = useCallback(() => {\n    if (currentLecture) {\n      lectureService.markCurrentLectureComplete();\n      setCurrentLecture(null);\n    }\n  }, [currentLecture]);\n\n  // Merge lectures\n  const mergeLectures = useCallback((lectureIds: string[]) => {\n    // In a real app, this would merge the lectures in your database\n    // For now, we'll just update the local state\n    setLectureHistory((prev) => {\n      const toMerge = prev.filter((l) => lectureIds.includes(l.id));\n      if (toMerge.length < 2) return prev;\n\n      const merged: LectureNote = {\n        id: `merged-${Date.now()}`,\n        title: `Merged Lecture (${toMerge.length} parts)`,\n        content: toMerge\n          .sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime())\n          .map((l) => `--- ${l.title} ---\\n${l.content}`)\n          .join('\\n\\n'),\n        timestamp: new Date(),\n        isComplete: true,\n      };\n\n      return [merged, ...prev.filter((l) => !lectureIds.includes(l.id))];\n    });\n  }, []);\n\n  return (\n    <div className=\"space-y-4\">\n      {currentLecture && (\n        <div className=\"bg-blue-50 p-4 rounded-lg mb-4\">\n          <div className=\"flex justify-between items-center mb-2\">\n            <h3 className=\"font-bold text-lg\">\n              Current Lecture: {currentLecture.title}\n            </h3>\n            <button\n              onClick={handleCompleteLecture}\n              className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n              disabled={isProcessing}\n            >\n              {isProcessing ? 'Processing...' : 'Complete Lecture'}\n            </button>\n          </div>\n          <div className=\"max-h-40 overflow-y-auto p-2 bg-white rounded border\">\n            {currentLecture.content}\n          </div>\n        </div>\n      )}\n\n      {lectureHistory.length > 0 && (\n        <div>\n          <h3 className=\"font-bold text-lg mb-2\">Previous Lectures</h3>\n          <div className=\"space-y-2\">\n            {lectureHistory.map((lecture) => (\n              <div\n                key={lecture.id}\n                className=\"p-3 border rounded hover:bg-gray-50 cursor-pointer\"\n                onClick={() => {\n                  // In a real app, this would open the lecture for editing/viewing\n                  toast.success(`Opening lecture: ${lecture.title}`);\n                }}\n              >\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"font-medium\">{lecture.title}</span>\n                  <span className=\"text-sm text-gray-500\">\n                    {lecture.timestamp.toLocaleDateString()}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 line-clamp-2 mt-1\">\n                  {lecture.content.substring(0, 200)}\n                  {lecture.content.length > 200 ? '...' : ''}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}